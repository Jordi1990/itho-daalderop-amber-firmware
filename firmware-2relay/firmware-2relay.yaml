substitutions:
  device_name: ithodaalderop-amber
  friendly_name: Itho Daalderop Amber Heat Pump Control Module
  version: 1.5.0
  statistics_url: https://ithodaalderopamber.azurewebsites.net/api/usage?code=K_0WheWwupwhoaILCP0ePrXs_pMzLVQnIU6UqoQLLOmlAzFuwWqICg%3D%3D

esphome:
  name: ${device_name}
  friendly_name: ${friendly_name}
  project:
    name: electropaultje.ithodaalderopAMBER
    version: ${version}
  on_boot:
    priority: -100
    then:
      - number.to_min: relais_switch_changes
      - delay: 15s
      - script.execute: send_usage_stats

esp32:
  board: esp32dev
  framework:
    type: esp-idf

logger:
  level: INFO

api:
  reboot_timeout: 0s

ota:
  platform: esphome

wifi:
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: IthoDaalderop
    password: ithodaalderop

captive_portal:

status_led:
  pin:
    number: GPIO19

http_request:
  useragent: esphome/device
  timeout: 10s
  verify_ssl: false

uart:
  baud_rate: 19200
  rx_pin: GPIO32
  tx_pin: GPIO33
  parity: NONE

modbus:
  flow_control_pin: GPIO14
  send_wait_time: 1000ms

modbus_controller:
  - id: modbus_con
    address: 0x01
    update_interval: 15s
    offline_skip_updates : 0
    on_command_sent:
      - if:
          condition:
            lambda: 'return function_code == 6;'
          then:
            - number.increment: modbus_writes
          else:
            - number.increment: modbus_reads

output:
  - platform: gpio
    id: led_yellow_output
    pin: GPIO18

light:
  - platform: binary
    id: led_yellow
    output: led_yellow_output

climate:
  # Used with Tr temperature sensor, can be customized to use another sensor from Home Assistant.
  - platform: thermostat
    name: Amber thermostat
    sensor: inside_temperature
    cool_action:
      - switch.turn_on: relay_cooling
    heat_action:
      - switch.turn_on: relay_heating
    idle_action:
      - switch.turn_off: relay_cooling
      - switch.turn_off: relay_heating
    set_point_minimum_differential: 4.0

    startup_delay: true # Wait 15min after power cycle
    min_cooling_off_time: 15min
    min_cooling_run_time: 1h # Min 1h run
    min_heating_off_time: 15min
    min_heating_run_time: 1h # Min 1h run
    min_idle_time: 15min
    default_preset: Comfort

    # Hysteresis
    heat_deadband: 0.3
    heat_overrun: 0.2

    cool_deadband: 0.5
    cool_overrun: 3.0
    # Presets
    preset:
      - name: Comfort
        default_target_temperature_low: 20.5 °C
        default_target_temperature_high: 24 °C

one_wire:
  - platform: gpio
    pin: GPIO27

sensor:
  - platform: modbus_controller
    name: Outside start temperture frost protection first stage
    register_type: holding
    address: 158
    value_type: S_WORD
    device_class: temperature
    unit_of_measurement: °C
    accuracy_decimals: 1
    state_class: measurement

  - platform: modbus_controller
    name: Outside start temperture frost protection second stage
    register_type: holding
    address: 159
    value_type: S_WORD
    device_class: temperature
    unit_of_measurement: °C
    accuracy_decimals: 1
    state_class: measurement

  - platform: modbus_controller
    name: Outside stop temperture frost protection first stage
    register_type: holding
    address: 160
    value_type: S_WORD
    device_class: temperature
    unit_of_measurement: °C
    accuracy_decimals: 1
    state_class: measurement

  - platform: modbus_controller
    name: Water start temperature frost protection second stage
    register_type: holding
    address: 161
    value_type: S_WORD
    device_class: temperature
    unit_of_measurement: °C
    accuracy_decimals: 1
    state_class: measurement

  - platform: modbus_controller
    name: Water stop temperature frost protection second stage
    register_type: holding
    address: 162
    register_count: 2
    value_type: S_WORD
    device_class: temperature
    unit_of_measurement: °C
    accuracy_decimals: 1
    state_class: measurement

  - platform: modbus_controller
    id: installer_code
    register_type: holding
    internal: True
    address: 164
    value_type: S_WORD
    state_class: measurement

  # Readonly parameters
  - platform: modbus_controller
    name: SG increase setpoint heating
    device_class: temperature
    state_class: measurement
    unit_of_measurement: °C    
    address: 340
    register_count: 35
    register_type: holding
    value_type: S_WORD
  - platform: modbus_controller
    name: SG increase setpoint domestic hot water
    device_class: temperature
    state_class: measurement
    unit_of_measurement: °C       
    address: 375
    register_type: holding
    value_type: S_WORD
  - platform: modbus_controller
    name: SG decrease setpoint cooling
    device_class: temperature
    state_class: measurement
    unit_of_measurement: °C       
    address: 376
    register_type: holding
    value_type: S_WORD

  # Realtime sensors
  - platform: modbus_controller
    name: Software version
    id: software_version
    address: 501
    skip_updates: 30
    internal: True
    force_new_range: True
    register_type: holding
    value_type: S_WORD
    accuracy_decimals: 2
    on_value: 
      then:
        - component.update: sw_version_template
    filters:
      - multiply: 0.01
      - round: 2
  - platform: modbus_controller
    name: Software version extended
    id: software_version_ex
    internal: True
    address: 502
    accuracy_decimals: 0
    skip_updates: 30
    register_type: holding
    value_type: S_WORD
    entity_category: diagnostic
    on_value: 
      then:
        - component.update: sw_version_template
  - platform: modbus_controller
    name: Database version
    id: database_version
    internal: True
    address: 503
    skip_updates: 30
    register_type: holding
    value_type: S_WORD
    filters:
      - multiply: 0.01
      - round: 2
    on_value: 
      then:
        - component.update: database_version_template
  - platform: modbus_controller
    name: Software version outdoor unit
    id: sofware_version_outdoor_unit
    internal: True
    address: 504
    skip_updates: 30
    register_type: holding
    value_type: S_WORD
    filters:
      - multiply: 0.01
      - round: 2
    on_value: 
      then:
        - component.update: sw_version_outdoor_template
  - platform: modbus_controller
    name: Heat exchanger water outlet temperature (Tuo)
    id: heat_exchanger_water_outlet_tuo_temperature
    device_class: temperature
    accuracy_decimals: 1
    state_class: measurement
    unit_of_measurement: °C
    icon: mdi:thermometer
    address: 505
    register_type: holding
    value_type: S_WORD
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    name: Heat exchanger water inlet temperature (Tui)
    id: heat_exchanger_water_inlet_tui_temperature
    device_class: temperature
    accuracy_decimals: 1
    state_class: measurement
    unit_of_measurement: °C
    icon: mdi:thermometer
    address: 506
    register_type: holding
    value_type: S_WORD
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    name: Indoor coil temperature (Tup)
    device_class: temperature
    accuracy_decimals: 1
    state_class: measurement
    unit_of_measurement: °C
    icon: mdi:thermometer
    address: 507
    register_type: holding
    value_type: S_WORD
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    name: Domestic hot water temperature (Tw)
    device_class: temperature
    accuracy_decimals: 1
    state_class: measurement
    unit_of_measurement: °C
    icon: mdi:thermometer
    address: 508
    register_type: holding
    value_type: S_WORD
    filters:
      - multiply: 0.1
      - filter_out: -99
  - platform: modbus_controller
    name: Heating/cooling temperature (Tc)
    device_class: temperature
    accuracy_decimals: 1
    state_class: measurement
    unit_of_measurement: °C
    icon: mdi:thermometer
    address: 509
    register_type: holding
    value_type: S_WORD
    filters:
      - multiply: 0.1
      - filter_out: -99
  - platform: modbus_controller
    name: Heating/cooling circuit 1 temperature (Tv1)
    device_class: temperature
    accuracy_decimals: 1
    state_class: measurement
    unit_of_measurement: °C
    icon: mdi:thermometer
    address: 510
    register_type: holding
    value_type: S_WORD
    filters:
      - multiply: 0.1
      - filter_out: -99
  - platform: modbus_controller
    name: Heating/cooling circuit 2 temperature (Tv2)
    device_class: temperature
    accuracy_decimals: 1
    state_class: measurement
    unit_of_measurement: °C
    icon: mdi:thermometer
    address: 511
    register_type: holding
    value_type: S_WORD
    register_count: 4
    filters:
      - multiply: 0.1
      - filter_out: -99
  - platform: modbus_controller
    name: Compressor working speed
    id: compressor_frequency
    device_class: frequency
    accuracy_decimals: 0
    state_class: measurement
    unit_of_measurement: Hz
    address: 515
    register_type: holding
    value_type: S_WORD
  - platform: modbus_controller
    name: Expansion valve setting
    state_class: measurement
    icon: mdi:pipe-valve
    address: 516
    register_type: holding
    value_type: S_WORD
  - platform: modbus_controller
    name: Ambient temperature (Ta)
    id: ambient_temperature
    device_class: temperature
    accuracy_decimals: 1
    state_class: measurement
    address: 517
    register_type: holding
    value_type: S_WORD
    unit_of_measurement: °C
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    name: Average 1h ambient temperature
    device_class: temperature
    accuracy_decimals: 1
    state_class: measurement
    address: 518
    register_type: holding
    value_type: S_WORD
    unit_of_measurement: °C
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    name: Average 4h ambient temperature
    device_class: temperature
    accuracy_decimals: 1
    state_class: measurement
    address: 519
    register_type: holding
    value_type: S_WORD
    unit_of_measurement: °C
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    name: Average 24h ambient temperature
    device_class: temperature
    accuracy_decimals: 1
    state_class: measurement
    address: 520
    register_type: holding
    value_type: S_WORD
    unit_of_measurement: °C
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    name: High pressure (Pd)
    device_class: pressure
    accuracy_decimals: 1
    state_class: measurement
    unit_of_measurement: bar
    address: 521
    register_type: holding
    value_type: S_WORD
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    name: Low pressure (Ps)
    device_class: pressure
    accuracy_decimals: 1
    state_class: measurement
    unit_of_measurement: bar
    address: 522
    register_type: holding
    value_type: S_WORD
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    name: Discharge temperature (Td)
    device_class: temperature
    accuracy_decimals: 1
    state_class: measurement
    unit_of_measurement: °C
    icon: mdi:thermometer
    address: 523
    register_type: holding
    value_type: S_WORD
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    name: Suction temperature (Ts)
    device_class: temperature
    accuracy_decimals: 1
    state_class: measurement
    unit_of_measurement: °C
    icon: mdi:thermometer
    address: 524
    register_type: holding
    value_type: S_WORD
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    name: Outdoor coil temperature (Tp)
    device_class: temperature
    accuracy_decimals: 1
    state_class: measurement
    unit_of_measurement: °C
    icon: mdi:thermometer
    address: 525
    register_type: holding
    value_type: S_WORD
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    name: Fan speed
    accuracy_decimals: 0
    state_class: measurement
    unit_of_measurement: rpm
    icon: mdi:fan
    address: 526
    register_type: holding
    value_type: S_WORD
    register_count: 2
  - platform: modbus_controller
    name: Running current
    id: running_current
    device_class: current
    accuracy_decimals: 1
    state_class: measurement
    unit_of_measurement: A
    address: 528
    register_type: holding
    value_type: S_WORD
    entity_category: diagnostic
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    name: Supply voltage
    id: supply_voltage
    device_class: voltage
    accuracy_decimals: 0
    state_class: measurement
    unit_of_measurement: V
    address: 529
    entity_category: diagnostic
    register_type: holding
    value_type: S_WORD
  - platform: modbus_controller
    name: Inside temperature (Tr)
    id: inside_temperature
    device_class: temperature
    accuracy_decimals: 1
    state_class: measurement
    unit_of_measurement: °C
    icon: mdi:thermometer
    address: 531
    register_type: holding
    value_type: S_WORD
    filters:
      - multiply: 0.1
      - filter_out: -99
  - platform: modbus_controller
    name: PWM waterpump signal
    state_class: measurement
    unit_of_measurement: "%"
    register_type: holding
    address: 537
    entity_category: diagnostic
    filters:
      - multiply: 0.1
  - platform: template
    name: Heat exchanger delta T
    id: heat_exchanger_delta_t
    device_class: temperature
    accuracy_decimals: 1
    state_class: measurement
    unit_of_measurement: °C
    icon: mdi:delta
    entity_category: diagnostic
    lambda: |-
        return id(heat_exchanger_water_outlet_tuo_temperature).state - id(heat_exchanger_water_inlet_tui_temperature).state;

  - platform: template
    name: Thermal power
    id: thermal_power
    accuracy_decimals: 0
    device_class: power
    state_class: measurement
    unit_of_measurement: W
    entity_category: diagnostic
    lambda: |-
        float qv = id(water_flow_rate).state / 60 / 1000;
        float dT = id(heat_exchanger_delta_t).state;
        float pw = qv * dT * 998 * 4190;
        return fabs(pw);

  - platform: template
    name: Estimated COP
    accuracy_decimals: 2
    state_class: measurement
    lambda: |-
        float power = id(estimated_power_usage).state;
        float thermalPower = id(thermal_power).state;
        int compressorFrequency = id(compressor_frequency).state;
        bool defrostActive = id(defrost_active).state;
        if (compressorFrequency > 0 && !defrostActive)
        {
          return thermalPower / power;
        }
        else {
          return 0;
        }

  - platform: template
    name: Stop heating temperature boundary
    device_class: temperature
    accuracy_decimals: 1
    state_class: measurement
    unit_of_measurement: °C
    lambda: |-
        return id(setpoint_heating).state + id(delta_t_stop_heating_cooling).state;

  - platform: template
    name: Stop cooling temperature boundary
    device_class: temperature
    accuracy_decimals: 1
    state_class: measurement
    unit_of_measurement: °C
    lambda: |-
        return id(setpoint_cooling).state - id(delta_t_stop_heating_cooling).state;

  - platform: template
    id: estimated_power_usage
    name: Estimated power usage
    unit_of_measurement: "W"
    state_class: measurement
    device_class: power
    lambda: |-
         return id(running_current).state * id(supply_voltage).state;
    accuracy_decimals: 0
    update_interval: 5s
    entity_category: diagnostic
    filters:
      - delta: 1
          

  - platform: modbus_controller
    name: Actual setpoint heating zone 1
    device_class: temperature
    state_class: measurement
    unit_of_measurement: °C       
    address: 703
    register_type: holding
    value_type: S_WORD
    filters:
      - multiply: 0.1  
  - platform: modbus_controller
    name: Actual setpoint heating zone 2
    device_class: temperature
    state_class: measurement
    unit_of_measurement: °C       
    address: 704
    register_type: holding
    value_type: S_WORD    
    register_count: 10
    filters:
      - multiply: 0.1
  - platform: modbus_controller
    name: Actual setpoint cooling zone 1
    device_class: temperature
    state_class: measurement
    unit_of_measurement: °C       
    address: 714
    register_type: holding
    value_type: S_WORD
    filters:
      - multiply: 0.1  
  - platform: modbus_controller
    name: Actual setpoint cooling zone 2
    device_class: temperature
    state_class: measurement
    unit_of_measurement: °C       
    address: 715
    register_type: holding
    value_type: S_WORD    
    filters:
      - multiply: 0.1

  - platform: uptime
    name: "Uptime"
    id: sensor_uptime
    update_interval: 60s
    device_class: duration
    unit_of_measurement: s
    state_class: total_increasing

  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: WiFi signal dB
    id: wifi_signal_db
    update_interval: 20s

  - platform: pulse_counter
    pin: GPIO35
    name: Pulse meter
    id: water_flow_rate
    device_class: volume_flow_rate
    unit_of_measurement: L/min
    filters:
      - lambda: return (x / id(flow_sensor_calibration).state);
    total:
      name: Total pulses
      unit_of_measurement: l
      filters:
        - lambda: return x / id(flow_sensor_calibration).state;
        - delta: 1
    on_value:
      - script.execute:
          id: blink_light
          calling_component: Pulse

  - platform: dallas_temp
    name: Dallas temperature 1
    icon: mdi:thermometer
    address: 0
    filters:
      - lambda: return x + id(dallas_1_offset).state;
      - delta: 0.1
    on_value:
      then:
        - script.execute:
            id: update_temperature_count
            sensor_number: 1
  - platform: dallas_temp
    name: Dallas temperature 2
    icon: mdi:thermometer
    address: 1
    filters:
      - lambda: return x + id(dallas_2_offset).state;
      - delta: 0.1
    on_value:
      then:
        - script.execute:
            id: update_temperature_count
            sensor_number: 2
  - platform: dallas_temp
    name: Dallas temperature 3
    icon: mdi:thermometer
    address: 2
    filters:
      - lambda: return x + id(dallas_3_offset).state;
      - delta: 0.1
    on_value:
      then:
        - script.execute:
            id: update_temperature_count
            sensor_number: 3

binary_sensor:
  # Readonly parameters
  - platform: modbus_controller
    name: SG ready
    register_type: holding
    address: 339
    icon: mdi:transmission-tower
    bitmask: 0x1
    # web_server:
    #   sorting_group_id: sorting_sg

  # Realtime sensors
  - platform: modbus_controller
    name: Domestic hot water in progress
    icon: mdi:water-boiler
    register_type: holding
    address: 499
    bitmask: 0x8
  - platform: modbus_controller
    name: Heating in progress
    icon: mdi:fire
    register_type: holding
    address: 499
    bitmask: 0x10
  - platform: modbus_controller
    name: Cooling in progress
    icon: mdi:snowflake
    register_type: holding
    address: 499
    bitmask: 0x20
  - platform: modbus_controller
    name: Defrost
    id: defrost_active
    icon: mdi:snowflake-alert
    register_type: holding
    address: 530
    bitmask: 0x1
    force_new_range: true
  - platform: modbus_controller
    name: Water flow switch
    icon: mdi:waves
    register_type: holding
    address: 532
    bitmask: 0x1
  - platform: modbus_controller
    name: Cooling switch
    icon: mdi:snowflake
    register_type: holding
    address: 534
    bitmask: 0x1
  - platform: modbus_controller
    name: Heating switch
    icon: mdi:fire
    register_type: holding
    address: 535
    bitmask: 0x1
  - platform: modbus_controller
    name: Heating switch circuit 2
    icon: mdi:fire
    register_type: holding
    address: 536
    bitmask: 0x1
  - platform: modbus_controller
    name: P01 - Main line current protection
    register_type: holding
    address: 540
    bitmask: 0x0001
    device_class: problem

  - platform: modbus_controller
    name: P02 - Compressor phase current protection
    register_type: holding
    address: 540
    bitmask: 0x0002
    device_class: problem

  - platform: modbus_controller
    name: P03 - IPM module protection
    register_type: holding
    address: 540
    bitmask: 0x0004
    device_class: problem

  - platform: modbus_controller
    name: P04 - Compressor oil return protection
    register_type: holding
    address: 540
    bitmask: 0x0008
    device_class: problem

  - platform: modbus_controller
    name: P05 - Compressor shut down due to abnormal high/low pressure
    register_type: holding
    address: 540
    bitmask: 0x0010
    device_class: problem

  - platform: modbus_controller
    name: P06 - Compressor speed down due to abnormal high pressure
    register_type: holding
    address: 540
    bitmask: 0x0020
    device_class: problem

  - platform: modbus_controller
    name: P07 - Compressor preheating
    register_type: holding
    address: 540
    bitmask: 0x0040
    device_class: problem

  - platform: modbus_controller
    name: P08 - Compressor discharge temp. too high protection
    register_type: holding
    address: 540
    bitmask: 0x0080
    device_class: problem

  - platform: modbus_controller
    name: P09 - Outdoor evaporator coil temp. protection
    register_type: holding
    address: 540
    bitmask: 0x0100
    device_class: problem

  - platform: modbus_controller
    name: P10 - AC over high/low voltage protection
    register_type: holding
    address: 540
    bitmask: 0x0200
    device_class: problem

  - platform: modbus_controller
    name: P11 - Compressor shut down due to too high/low outdoor temperature
    register_type: holding
    address: 540
    bitmask: 0x0400
    device_class: problem

  - platform: modbus_controller
    name: P12 - Frequency limit compressor
    register_type: holding
    address: 540
    bitmask: 0x0800
    device_class: problem

  - platform: modbus_controller
    name: P13 - Low pressure condensor pressure switch
    register_type: holding
    address: 540
    bitmask: 0x1000
    device_class: problem

  - platform: modbus_controller
    name: F01 - Outdoor temp. sensor failure (Ta)
    register_type: holding
    address: 541
    bitmask: 0x0020
    device_class: problem

  - platform: modbus_controller
    name: F02 - Outdoor evaporator coil temp. sensor failure (Tp)
    register_type: holding
    address: 541
    bitmask: 0x0040
    device_class: problem

  - platform: modbus_controller
    name: F03 - Outdoor gas discharge temp. sensor failure (Td)
    register_type: holding
    address: 541
    bitmask: 0x0080
    device_class: problem

  - platform: modbus_controller
    name: F04 - Outdoor gas return temp. sensor failure (Ts)
    register_type: holding
    address: 541
    bitmask: 0x0100
    device_class: problem

  - platform: modbus_controller
    name: F05 - Evaporator pressure sensor failure (Ps)
    register_type: holding
    address: 541
    bitmask: 0x0200
    device_class: problem

  - platform: modbus_controller
    name: F06 - Condenser pressure sensor failure (Pd)
    register_type: holding
    address: 541
    bitmask: 0x0400
    device_class: problem

  - platform: modbus_controller
    name: F07 - Pressure switch failure
    register_type: holding
    address: 541
    bitmask: 0x0800
    device_class: problem

  - platform: modbus_controller
    name: F09 - DC fan A failure
    register_type: holding
    address: 541
    bitmask: 0x2000
    device_class: problem

  - platform: modbus_controller
    name: F10 - DC fan B failure
    register_type: holding
    address: 541
    bitmask: 0x4000
    device_class: problem

  - platform: modbus_controller
    name: F11 - Evaporating pressure failure
    register_type: holding
    address: 541
    bitmask: 0x8000
    device_class: problem

  - platform: modbus_controller
    name: F12 - high pressure failure (Pd)
    register_type: holding
    address: 542
    bitmask: 0x0001
    device_class: problem

  - platform: modbus_controller
    name: F13 - Room temperature sensor failure (Tr)
    register_type: holding
    address: 542
    bitmask: 0x0002
    device_class: problem

  - platform: modbus_controller
    name: F14 - Sanitary hot water temperature sensor failure (Tw)
    register_type: holding
    address: 542
    bitmask: 0x0004
    device_class: problem

  - platform: modbus_controller
    name: F15 - Cooling/heating water temperature sensor failure (Tc)
    register_type: holding
    address: 542
    bitmask: 0x0008
    device_class: problem

  - platform: modbus_controller
    name: F16 - Water outlet temperature sensor failure (Tuo)
    register_type: holding
    address: 542
    bitmask: 0x0010
    device_class: problem

  - platform: modbus_controller
    name: F17 - Water inlet temperature sensor failure (Tui)
    register_type: holding
    address: 542
    bitmask: 0x0020
    device_class: problem

  - platform: modbus_controller
    name: F18 - Condenser coil temp. sensor failure (Tup)
    register_type: holding
    address: 542
    bitmask: 0x0040
    device_class: problem

  - platform: modbus_controller
    name: F21 - Mixture valve 1 temperature sensor failure (Tv1)
    register_type: holding
    address: 542
    bitmask: 0x0080
    device_class: problem

  - platform: modbus_controller
    name: F22 - Mixture valve 2 temperature sensor failure (Tv2)
    register_type: holding
    address: 542
    bitmask: 0x0100
    device_class: problem

  - platform: modbus_controller
    name: F25 - Communication failure to indoor controller
    register_type: holding
    address: 542
    bitmask: 0x0200
    device_class: problem

  - platform: modbus_controller
    name: F27 - Indoor PCB EEPROM failure
    register_type: holding
    address: 542
    bitmask: 0x0400
    device_class: problem

  - platform: modbus_controller
    name: F28 - Water pump PWM signal feedback failure P0
    register_type: holding
    address: 542
    bitmask: 0x0800
    device_class: problem

  - platform: modbus_controller
    name: F29 - Mixing valve 1 failure
    register_type: holding
    address: 542
    bitmask: 0x1000
    device_class: problem

  - platform: modbus_controller
    name: F30 - Mixing valve 2 failure
    register_type: holding
    address: 542
    bitmask: 0x2000
    device_class: problem

  - platform: modbus_controller
    name: E01 - Communication failure
    register_type: holding
    address: 540
    bitmask: 0x2000
    device_class: problem

  - platform: modbus_controller
    name: E02 - Communication failure
    register_type: holding
    address: 540
    bitmask: 0x4000
    device_class: problem

  - platform: modbus_controller
    name: E03 - Compressor power failure
    register_type: holding
    address: 540
    bitmask: 0x8000
    device_class: problem

  - platform: modbus_controller
    name: E04 - Overcurrent protection compressor
    register_type: holding
    address: 541
    bitmask: 0x0001
    device_class: problem

  - platform: modbus_controller
    name: E05 - Compressor driver failure
    register_type: holding
    address: 541
    bitmask: 0x0002
    device_class: problem

  - platform: modbus_controller
    name: E06 - VDC unit failure
    register_type: holding
    address: 541
    bitmask: 0x0004
    device_class: problem

  - platform: modbus_controller
    name: E07 - AC current failure
    register_type: holding
    address: 541
    bitmask: 0x0008
    device_class: problem

  - platform: modbus_controller
    name: E08 - EEPROM failure oudoor unit
    register_type: holding
    address: 541
    bitmask: 0x0010
    device_class: problem

  - platform: modbus_controller
    name: S01 - Cooling anti freezing protection
    register_type: holding
    address: 542
    bitmask: 0x4000
    device_class: problem

  - platform: modbus_controller
    name: S02 - Low flow warning
    register_type: holding
    address: 542
    bitmask: 0x8000
    device_class: problem

  - platform: modbus_controller
    name: S03 - Flow switch failurer
    register_type: holding
    address: 543
    bitmask: 0x0001
    device_class: problem

  - platform: modbus_controller
    name: S04 - Communication failure indoor unit
    register_type: holding
    address: 543
    bitmask: 0x0002
    device_class: problem

  - platform: modbus_controller
    name: S05 - Communication failure outdoor unit
    register_type: holding
    address: 543
    bitmask: 0x0004
    device_class: problem

  - platform: modbus_controller
    name: S06 - Water outlet to low in cooling
    register_type: holding
    address: 543
    bitmask: 0x0008
    device_class: problem

  - platform: modbus_controller
    name: S07 - Water outlet to high in heating
    register_type: holding
    address: 543
    bitmask: 0x0010
    device_class: problem

  - platform: modbus_controller
    name: S08 - Deforst failure
    register_type: holding
    address: 543
    bitmask: 0x0020
    device_class: problem

  - platform: modbus_controller
    name: S09 - Water outlet temp low during defrost
    register_type: holding
    address: 543
    bitmask: 0x0040
    device_class: problem

  - platform: modbus_controller
    name: S10 - flow switch failure (3x)
    register_type: holding
    address: 543
    bitmask: 0x0080
    device_class: problem

  - platform: modbus_controller
    name: S11 - Cooling anti freezing protection
    register_type: holding
    address: 543
    bitmask: 0x0100
    device_class: problem

  - platform: modbus_controller
    name: S13 - 4-way valve failure
    register_type: holding
    address: 543
    bitmask: 0x0200
    device_class: problem

  - platform: gpio
    pin: 
      number: GPIO34
      inverted: true
    id: factory_reset_pin
    on_click:
      then:
        - repeat:
            count: 5
            then:
              - light.turn_on: led_yellow
              - delay: 200ms
              - light.turn_off: led_yellow
              - delay: 200ms    
        - button.press: button_factory_reset    

time:
  - platform: homeassistant
    id: time_homeassistant
    timezone: Europe/Amsterdam

switch:
  - platform: modbus_controller
    name: System on off
    register_type: holding
    address: 0
    bitmask: 0x1
  - platform: modbus_controller
    name: Domestic hot water mode
    register_type: holding
    address: 5
    bitmask: 0x1
  - platform: modbus_controller
    name: Heating mode
    register_type: holding
    address: 6
    bitmask: 0x1
  - platform: modbus_controller
    name: Cooling mode
    register_type: holding
    address: 7
    bitmask: 0x1
  - platform: modbus_controller
    name: Use heating curve
    register_type: holding
    address: 30
    bitmask: 0x1
  - platform: modbus_controller
    name: Use anti legionella mode
    register_type: holding
    address: 47
    bitmask: 0x1
  - platform: modbus_controller
    name: Use domestic hot water timer
    register_type: holding
    address: 72
    bitmask: 0x1
    icon: mdi:clock-outline
  - platform: modbus_controller
    name: Reduced mode timer
    register_type: holding
    address: 110
    bitmask: 0x1
    icon: mdi:clock-outline
  - platform: modbus_controller
    name: Domestic hot water ECO mode
    register_type: holding
    address: 135
    bitmask: 0x1
    icon: mdi:sprout

  - platform: gpio
    pin: GPIO22
    name: Relay heating
    id: relay_heating
    icon: mdi:electric-switch
    restore_mode: RESTORE_DEFAULT_OFF
    on_turn_on:
    - script.execute:
        id: relay_light
        calling_component: Relay heating
        relais_state: on
    - number.increment: relais_switch_changes
    on_turn_off:
    - script.execute:
        id: relay_light
        calling_component: Relay heating
        relais_state: off
    - number.increment: relais_switch_changes
  - platform: gpio
    pin: GPIO23
    name: Relay cooling
    id: relay_cooling
    icon: mdi:electric-switch
    restore_mode: RESTORE_DEFAULT_OFF
    on_turn_on:
     - script.execute:
        id: relay_light
        calling_component: Relay cooling
        relais_state: on
     - number.increment: relais_switch_changes
    on_turn_off:
     - script.execute:
        id: relay_light
        calling_component: Relay cooling
        relais_state: off
     - number.increment: relais_switch_changes

  - platform: template
    name: Allow anonymous usage statistics
    id: allow_send_statistics
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    icon: mdi:database-cog-outline

button:
  - platform: restart
    name: Restart control module
  - platform: factory_reset
    id: button_factory_reset
    name: Factory reset control module

number:
  - platform: modbus_controller
    name: Outside temperature start heating
    register_type: holding
    address: 10
    value_type: S_WORD
    entity_category: config
    device_class: temperature
    unit_of_measurement: °C
    min_value: -10
    max_value: 25

  - platform: modbus_controller
    name: Outside temperature start cooling
    register_type: holding
    address: 11
    value_type: S_WORD
    entity_category: config
    device_class: temperature
    unit_of_measurement: °C
    min_value: 20
    max_value: 53

  - platform: modbus_controller
    name: Duration min. compressor speed
    register_type: holding
    address: 12
    value_type: S_WORD
    entity_category: config
    unit_of_measurement: Min
    min_value: 5
    max_value: 180

  - platform: modbus_controller
    name: Delta T to stop HP
    id: delta_t_stop_heating_cooling
    modbus_controller_id: modbus_con
    address: 26
    min_value: 1
    max_value: 5
    register_type: holding
    value_type: S_WORD
    entity_category: config
    mode: box
    device_class: temperature
    unit_of_measurement: °C
  - platform: modbus_controller
    name: Delta T to restart HP
    modbus_controller_id: modbus_con
    address: 27
    min_value: 1
    max_value: 10
    register_type: holding
    value_type: S_WORD
    entity_category: config
    mode: box
    device_class: temperature
    unit_of_measurement: °C
  - platform: modbus_controller
    name: Delta T to lower compressor speed
    modbus_controller_id: modbus_con
    address: 28
    min_value: 1
    max_value: 10
    register_type: holding
    value_type: S_WORD
    entity_category: config
    mode: box
    device_class: temperature
    unit_of_measurement: °C
  - platform: modbus_controller
    name: Cooling setpoint
    id: setpoint_cooling
    modbus_controller_id: modbus_con
    address: 29
    min_value: 12
    max_value: 25
    register_type: holding
    value_type: S_WORD
    entity_category: config
    mode: box
    device_class: temperature
    unit_of_measurement: °C

  # Heating curve settings
  - platform: modbus_controller
    name: Heating curve ambient temperature 1
    id: heating_curve_a1
    device_class: temperature
    unit_of_measurement: °C
    address: 31
    min_value: -25
    max_value: 35
    register_type: holding
    value_type: S_WORD
    entity_category: config
    mode: box
  - platform: modbus_controller
    id: heating_curve_a2
    name: Heating curve ambient temperature 2
    device_class: temperature
    unit_of_measurement: °C
    address: 32
    min_value: -25
    max_value: 35
    register_type: holding
    value_type: S_WORD
    entity_category: config
    mode: box
  - platform: modbus_controller
    id: heating_curve_a3
    name: Heating curve ambient temperature 3
    device_class: temperature
    unit_of_measurement: °C
    address: 33
    min_value: -25
    max_value: 35
    register_type: holding
    value_type: S_WORD
    entity_category: config
    mode: box
  - platform: modbus_controller
    id: heating_curve_a4
    name: Heating curve ambient temperature 4
    device_class: temperature
    unit_of_measurement: °C
    address: 34
    min_value: -25
    max_value: 35
    register_type: holding
    value_type: S_WORD
    entity_category: config
    mode: box
  - platform: modbus_controller
    id: heating_curve_a5
    name: Heating curve ambient temperature 5
    device_class: temperature
    unit_of_measurement: °C
    address: 35
    min_value: -25
    max_value: 35
    register_type: holding
    value_type: S_WORD
    entity_category: config
    mode: box
  - platform: modbus_controller
    name: Heating curve water temperature 1
    id: heating_curve_t1
    device_class: temperature
    unit_of_measurement: °C
    address: 36
    min_value: 7
    max_value: 55
    register_type: holding
    value_type: S_WORD
    entity_category: config
    mode: box
  - platform: modbus_controller
    name: Heating curve water temperature 2
    id: heating_curve_t2
    device_class: temperature
    unit_of_measurement: °C
    address: 37
    min_value: 7
    max_value: 55
    register_type: holding
    value_type: S_WORD
    entity_category: config
    mode: box
  - platform: modbus_controller
    name: Heating curve water temperature 3
    id: heating_curve_t3
    device_class: temperature
    unit_of_measurement: °C
    address: 38
    min_value: 7
    max_value: 55
    register_type: holding
    value_type: S_WORD
    entity_category: config
    mode: box
  - platform: modbus_controller
    name: Heating curve water temperature 4
    id: heating_curve_t4
    device_class: temperature
    unit_of_measurement: °C
    address: 39
    min_value: 7
    max_value: 55
    register_type: holding
    value_type: S_WORD
    entity_category: config
    mode: box
  - platform: modbus_controller
    name: Heating curve water temperature 5
    id: heating_curve_t5
    device_class: temperature
    unit_of_measurement: °C
    address: 40
    min_value: 7
    max_value: 55
    register_type: holding
    value_type: S_WORD
    entity_category: config
    mode: box

  - platform: modbus_controller
    name: Heating setpoint
    id: setpoint_heating
    modbus_controller_id: modbus_con
    address: 44
    min_value: 20
    max_value: 55
    register_type: holding
    value_type: S_WORD
    entity_category: config
    mode: box
    device_class: temperature
    unit_of_measurement: °C
    icon: mdi:water-thermometer-outline

  - platform: modbus_controller
    name: Circuit 1 maximum temperature
    modbus_controller_id: modbus_con
    address: 45
    min_value: 7
    max_value: 75
    register_type: holding
    value_type: S_WORD
    entity_category: config
    mode: box
    device_class: temperature
    unit_of_measurement: °C
  - platform: modbus_controller
    name: Circuit 1 minimum temperature
    modbus_controller_id: modbus_con
    address: 46
    min_value: 7
    max_value: 75
    register_type: holding
    value_type: S_WORD
    entity_category: config
    mode: box
    device_class: temperature
    unit_of_measurement: °C

  - platform: modbus_controller
    name: Domestic hot water setpoint
    modbus_controller_id: modbus_con
    address: 64
    value_type: S_WORD
    entity_category: config
    min_value: 25
    max_value: 70
    device_class: temperature
    unit_of_measurement: °C
    mode: box
    icon: mdi:water-thermometer-outline
  - platform: modbus_controller
    name: Domestic hot water reheating point
    modbus_controller_id: modbus_con
    address: 65
    value_type: S_WORD
    entity_category: config
    min_value: 2
    max_value: 15
    device_class: temperature
    unit_of_measurement: °C
    mode: box
    icon: mdi:water-thermometer-outline
  - platform: modbus_controller
    name: Minimum ambient temperature to start domestic hot water ECO mode
    modbus_controller_id: modbus_con
    address: 133
    min_value: -20
    max_value: 43
    register_type: holding
    value_type: S_WORD
    entity_category: config
    mode: box
    device_class: temperature
    unit_of_measurement: °C

  - platform: template
    name: Flow sensor calibration
    id: flow_sensor_calibration
    min_value: 1
    max_value: 1000
    mode: box
    step: 1
    restore_value: true
    optimistic: true
    entity_category: config
    unit_of_measurement: pulses/l
  - platform: template
    name: Dallas temperature 1 offset
    id: dallas_1_offset
    min_value: -10.0
    max_value: 10.0
    initial_value: 0
    mode: box
    step: 0.1
    restore_value: true
    optimistic: true
    entity_category: config
    unit_of_measurement: °C
  - platform: template
    name: Dallas temperature 2 offset
    id: dallas_2_offset
    min_value: -10.0
    max_value: 10.0
    initial_value: 0
    mode: box
    step: 0.1
    restore_value: true
    optimistic: true
    entity_category: config
    unit_of_measurement: °C
  - platform: template
    name: Dallas temperature 3 offset
    id: dallas_3_offset
    min_value: -10.0
    max_value: 10.0
    initial_value: 0
    mode: box
    step: 0.1
    restore_value: true
    optimistic: true
    entity_category: config
    unit_of_measurement: °C
  - platform: template
    id: relais_switch_changes
    min_value: 0
    max_value: 16000
    mode: box
    step: 1
    optimistic: true
  - platform: template
    id: connected_temperature_sensors
    min_value: 0
    max_value: 3
    mode: box
    step: 1
    optimistic: true
  - platform: template
    id: modbus_writes
    min_value: 0
    max_value: 32000
    mode: box
    step: 1
    optimistic: true
  - platform: template
    id: modbus_reads
    min_value: 0
    max_value: 32000
    mode: box
    step: 1
    optimistic: true

select:
  - platform: modbus_controller
    name: Working mode
    address: 3
    value_type: S_WORD
    optionsmap:
      Heating: 1
      Cooling: 2
      Domestic hot water: 3
      Auto: 4
    icon: mdi:cog-outline
    register_count: 2
  - platform: modbus_controller
    name: Pump speed heating
    address: 214
    value_type: S_WORD
    optionsmap:
      High: 0
      Medium: 1
      Low: 2
    icon: mdi:pump
  - platform: modbus_controller
    name: Pump speed cooling
    address: 215
    value_type: S_WORD
    optionsmap:
      High: 0
      Medium: 1
      Low: 2
    icon: mdi:pump
  - platform: modbus_controller
    name: Pump speed domestic hot water
    address: 216
    value_type: S_WORD
    optionsmap:
      High: 0
      Medium: 1
      Low: 2
    icon: mdi:pump

  - platform: template
    name: Yellow LED Status
    id: yellow_led_select
    optimistic: true
    restore_value: true
    entity_category: config
    options:
      - "Off"
      - Modbus
      - Pulse
      - Relay heating
      - Relay cooling

script:
  - id: update_temperature_count
    parameters:
      sensor_number: int
    then:
      - if:
          condition:
            lambda: |-
              return id(connected_temperature_sensors).state < sensor_number;
          then:
            - number.set:
                id: connected_temperature_sensors
                value: !lambda return sensor_number;
  - id: relay_light
    parameters:
      calling_component: string
      relais_state: bool
    then:
      - if:
          condition:
            lambda: return id(yellow_led_select).state == calling_component;
          then:
            - light.control:
                id: led_yellow
                state: !lambda return relais_state;
  - id: blink_light
    parameters:
      calling_component: string
    then:
      - if:
          condition:
            lambda: return id(yellow_led_select).state == calling_component;
          then:
            - light.turn_on: led_yellow
            - delay: 250ms
            - light.turn_off: led_yellow
  - id: send_usage_stats
    then:
      - if:
          condition:
            switch.is_on: allow_send_statistics
          then:
            # - http_request.post:
            #     url: ${statistics_url}
            #     json: |-
            #       root["amber_database_version"] = id(database_version).state;
            #       root["amber_eeprom_version"] = id(eeprom_version).state;
            #       root["amber_software_version"] = id(software_version).state;
            #       root["amber_software_version_outdoor"] = id(sofware_version_outdoor_unit).state;
            #       root["connected_temperature_sensors"] = id(connected_temperature_sensors).state;
            #       root["device_identifier"] = id(mac_address).state;
            #       root["firmware_version"] = "${version}";
            #       root["latest_firmware_version"] = id(firmware_update).update_info.latest_version;
            #       root["modbus_reads"] = id(modbus_reads).state;
            #       root["modbus_writes"] = id(modbus_writes).state;
            #       root["relais_switches"] = id(relais_switch_changes).state;
            #       root["uptime"] = id(sensor_uptime).state;
            #       root["relais"] = 2;
            - number.to_min: modbus_writes
            - number.to_min: modbus_reads
            - number.to_min: relais_switch_changes

text_sensor:
  - platform: wifi_info
    mac_address:
      id: mac_address
  - platform: template
    id: sw_version_template
    icon: mdi:database-outline
    entity_category: diagnostic
    name: "Software version"
    lambda: |-
      return esphome::str_sprintf("V%.2f-T%.0f", id(software_version).state, id(software_version_ex).state);
  - platform: template
    id: sw_version_outdoor_template
    icon: mdi:database-outline
    entity_category: diagnostic
    name: "Outdoor software version"
    lambda: |-
      return esphome::str_sprintf("%.2f", id(sofware_version_outdoor_unit).state);
  - platform: template
    id: database_version_template
    icon: mdi:database-outline
    entity_category: diagnostic
    name: "Database version"
    lambda: |-
      return esphome::str_sprintf("%.2f", id(database_version).state);
  - platform: template
    entity_category: diagnostic
    icon: mdi:security
    name: "Installer code"
    lambda: |-
      return esphome::str_sprintf("%.0f", id(installer_code).state);
  

web_server:
  port: 80
  version: 3

interval:
  - interval: 6h
    startup_delay: 1min
    then:
      - script.execute: send_usage_stats